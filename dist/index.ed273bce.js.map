{"mappings":"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","sources":["node_modules/@swc/helpers/src/_create_class.js","src/script/constant.ts","src/script/snake.ts","%3C%3Cjsx-config-pragma.js%3E%3E","node_modules/@swc/helpers/src/_class_call_check.js","src/script/app.ts"],"sourcesContent":["function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","\r\nexport const TABLE_WIDTH = 30\r\nexport const TABLE_HEIGHT = 40","import { Position } from \"../types/food-types\"\r\nimport { Direc, Point } from \"../types/snake-types\"\r\nimport { TABLE_HEIGHT, TABLE_WIDTH } from \"./constant\"\r\n\r\nconst getRandomInt = (max: number): number => {\r\n    return Math.floor(Math.random() * max);\r\n}\r\n\r\nexport default class Snake {\r\n    snake: Point[]\r\n    table: HTMLElement | null\r\n    nextDirection: Direc\r\n    actualDirection: Direc\r\n    lastPress: number\r\n    speed: number\r\n    foodPosition: Position\r\n    food: HTMLElement | null\r\n    lastElt: null | {\r\n        status: boolean,\r\n        x: number,\r\n        y: number\r\n    }\r\n\r\n    constructor (idTable: string, idFood: string) {\r\n        this.snake = [\r\n            {x: 0, y: 0},\r\n            {x: 1, y: 0},\r\n            {x: 2, y: 0}\r\n        ]\r\n        this.table = document.getElementById(idTable)\r\n        this.actualDirection = 'r'\r\n        this.nextDirection = 'r'\r\n        this.lastPress = Date.now()\r\n        this.speed = 200\r\n        this.foodPosition = {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n        this.food = document.getElementById(idFood)\r\n        this.lastElt = null\r\n    }\r\n\r\n    buildSnake () {\r\n        if(!this.table) return\r\n        \r\n        this.table.innerHTML = ''\r\n        this.snake.forEach((pt: Point, k: number) => {\r\n            const block = document.createElement('div')\r\n            block.classList.add('point')\r\n            block.style.left = `${pt.x * 10}px`\r\n            block.style.top = `${pt.y * 10}px`\r\n\r\n            this.table?.insertAdjacentElement('beforeend', block)\r\n        })\r\n    }\r\n    movesnake () {\r\n        const actualHead = this.snake[this.snake.length - 1]\r\n\r\n        switch(this.actualDirection){\r\n            case 't':\r\n                if(actualHead.y > 0){\r\n                    this.snake[this.snake.length - 1] = {\r\n                        x: actualHead.x,\r\n                        y: actualHead.y - 1\r\n                    }\r\n                } \r\n                break\r\n            case 'r':\r\n                if(actualHead.x < TABLE_WIDTH - 1){\r\n                    this.snake[this.snake.length - 1] = {\r\n                        x: actualHead.x + 1,\r\n                        y: actualHead.y\r\n                    }\r\n                }\r\n                break;\r\n            case 'b':\r\n                if(actualHead.y < TABLE_HEIGHT - 1){\r\n                    this.snake[this.snake.length - 1] = {\r\n                        x: actualHead.x,\r\n                        y: actualHead.y + 1\r\n                    }\r\n                } \r\n                break\r\n            case 'l':\r\n                if(actualHead.x > 0){\r\n                    this.snake[this.snake.length - 1] = {\r\n                        x: actualHead.x - 1,\r\n                        y: actualHead.y\r\n                    }\r\n                }\r\n                break\r\n        }\r\n        if(this.snake[this.snake.length - 1].x === this.foodPosition.x && this.snake[this.snake.length - 1].y === this.foodPosition.y){\r\n            \r\n            this.lastElt = {\r\n                status: false,\r\n                x: this.snake[1].x,\r\n                y: this.snake[1].y\r\n            }\r\n            this.buildNewFood()\r\n        }\r\n\r\n        const makeChain = (k: number = this.snake.length - 2, value = actualHead) => {\r\n            if(k < 0) return\r\n            \r\n            const tempValue = this.snake[k]\r\n            this.snake[k] = value\r\n            \r\n            makeChain(k - 1, tempValue)\r\n        }\r\n        if(this.snake[this.snake.length - 1] !== actualHead){\r\n            makeChain()\r\n            if(this.lastElt !== null && this.lastElt.status){\r\n                this.snake.unshift(this.lastElt)\r\n                this.lastElt = null\r\n            }\r\n            if(this.lastElt !== null) this.lastElt.status = true\r\n        }\r\n        if(this.nextDirection !== this.actualDirection) this.actualDirection = this.nextDirection\r\n    }\r\n    updateDirection (d: Direc) {\r\n        if(\r\n            (d === 't' && this.actualDirection === 'b') || \r\n            (d === 'b' && this.actualDirection === 't')\r\n        ) return\r\n        if(\r\n            (d === 'l' && this.actualDirection === 'r') || \r\n            (d === 'r' && this.actualDirection === 'l')\r\n        ) return\r\n        \r\n        if(Date.now() - this.lastPress > this.speed){\r\n            this.nextDirection = d\r\n            this.lastPress = Date.now()\r\n        }  \r\n    }\r\n    play () {\r\n        this.buildNewFood()\r\n    }\r\n\r\n\r\n    buildNewFood () {\r\n        if(!this.food) return\r\n        \r\n        this.generatPosition(this.snake)\r\n        this.food.style.left = `${this.foodPosition.x * 10}px`\r\n        this.food.style.top = `${this.foodPosition.y * 10}px`\r\n    }\r\n    generatPosition (snake: Point[]) {\r\n        let newX = this.foodPosition.x\r\n        let newY = this.foodPosition.y\r\n        while(!(this.foodPosition.x !== newX || this.foodPosition.y !== newY) || (snake.indexOf({x: newX, y: newY}) > 0)){\r\n            newX = getRandomInt(TABLE_WIDTH)\r\n            newY = getRandomInt(TABLE_HEIGHT)\r\n        }\r\n        this.foodPosition = {\r\n            x: newX,\r\n            y: newY\r\n        }\r\n    }\r\n}",null,"export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import Food from \"./food\";\r\nimport Snake from \"./snake\";\r\n\r\nconst S = new Snake('snake-point', 'food')\r\nS.play()\r\nconst time = setInterval(() => {\r\n    S.movesnake()\r\n    S.buildSnake()\r\n}, S.speed)\r\n\r\nconst btnT = document.getElementById('btn-t')\r\nconst btnR = document.getElementById('btn-r')\r\nconst btnB = document.getElementById('btn-b')\r\nconst btnL = document.getElementById('btn-l')\r\n\r\nbtnT?.addEventListener('pointerdown', function(e){\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    S.updateDirection('t')\r\n})\r\nbtnR?.addEventListener('pointerdown', function(e){\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    S.updateDirection('r')\r\n})\r\nbtnB?.addEventListener('pointerdown', function(e){\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    S.updateDirection('b')\r\n})\r\nbtnL?.addEventListener('pointerdown', function(e){\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    S.updateDirection('l')\r\n})\r\ndocument.addEventListener('keydown', function(e){\r\n    e.preventDefault()\r\n    if(e.code === 'ArrowUp') S.updateDirection('t')\r\n    if(e.code === 'ArrowDown') S.updateDirection('b')\r\n    if(e.code === 'ArrowLeft') S.updateDirection('l')\r\n    if(e.code === 'ArrowRight') S.updateDirection('r')\r\n})"],"names":["$e5f9bd0c37e9914c$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$069c3bd8e6e386f0$var$getRandomInt","max","Math","floor","random","$069c3bd8e6e386f0$export$2e2bcd8739ae039","idTable","idFood","instance","Constructor","TypeError","this","snake","x","y","table","document","getElementById","actualDirection","nextDirection","lastPress","Date","now","speed","foodPosition","food","lastElt","protoProps","staticProps","innerHTML","forEach","pt","k","ref","block","createElement","classList","add","style","left","concat","top","_this","insertAdjacentElement","actualHead","$2fb4c76203b2e746$export$59c9e59c1fc6920a","$2fb4c76203b2e746$export$c63c059ca5f83d93","status","buildNewFood","makeChain","arguments","value","tempValue","unshift","d","generatPosition","newX","newY","indexOf","prototype","$528a093036e289be$var$S","play","setInterval","movesnake","buildSnake","$528a093036e289be$var$btnT","$528a093036e289be$var$btnR","$528a093036e289be$var$btnB","$528a093036e289be$var$btnL","addEventListener","e","preventDefault","stopPropagation","updateDirection","code"],"version":3,"file":"index.ed273bce.js.map"}